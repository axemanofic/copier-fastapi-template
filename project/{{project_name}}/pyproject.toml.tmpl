[tool.poetry]
name = "{{ project_name }}"
version = "{{ project_version }}"
description = "{{ project_description }}"
authors = ["{{ project_author }}"]
readme = "README.md"
packages = [{include = "src", from = ""}]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.80.0"
uvicorn = {extras = ["standard"], version = "^0.18.2"}
gunicorn = "^20.1.0"
toml = "^0.10.2"
pydantic = {extras = ["email"], version = "^1.10.2"}
black = "^22.10.0"
isort = "^5.10.1"
sqlalchemy = "^1.4.44"
fastapi-pagination = "^0.11.0"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
jinja2 = "*"
mkdocs-material = "^8.5.11"
neoteroi-mkdocs = "^0.1.2"
mkdocs-swagger-ui-tag = "^0.5.0"

[tool.poetry.scripts]
dev = "scripts.cli.commands.run:run_dev"
genkey = "scripts.cli.commands.generate_key:generate_key"
startmodule = "scripts.cli.commands.startmodule:startmodule"
init_db = "src.database.init_db:init_db"


[tool.poetry.group.dev.dependencies]
requests = "^2.28.1"
pytest = "^7.1.3"
faker = "^15.3.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.isort]
profile = "black"
